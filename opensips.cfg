#####################################
# edge script info
# build_time: 2019-09-05 20:51:56
# cfg_env: stress1
#VERSION=2.4.21

#####################################
log_level=4
log_stderror=yes
log_facility=LOG_LOCAL0
children=4
dns_try_ipv6=no
auto_aliases=no
server_header="Server: WSS"
user_agent_header="User-Agent: WSS"

#include(`./alias/stress1.cfg')

/* bind on the machine's virtual ip (note: enable sys.net.ipv4.ip_nonlocal_bind) */

listen=udp:192.168.40.72:18627 as 192.168.40.72:18627
listen=tcp:192.168.40.72:18627 as 192.168.40.72:18627
 
mpath="/usr/local/lib64/opensips/modules/"

loadmodule "proto_tcp.so"
loadmodule "proto_udp.so"
loadmodule "db_mysql.so"
loadmodule "signaling.so"
loadmodule "sl.so"
loadmodule "tm.so"
loadmodule "rr.so"
loadmodule "uri.so"
loadmodule "dialog.so"
loadmodule "maxfwd.so"
loadmodule "textops.so"
loadmodule "mi_fifo.so"
loadmodule "dispatcher.so"
loadmodule "sipmsgops.so"
loadmodule "nathelper.so"
loadmodule "avpops.so"
loadmodule "rtpproxy.so"
loadmodule "path.so"
loadmodule "httpd.so"
loadmodule "mi_http.so"
loadmodule "domain.so"
loadmodule "drouting.so"
loadmodule "uac.so"
loadmodule "uac_auth.so"
loadmodule "uac_registrant.so"

modparam("mi_fifo", "fifo_name", "/tmp/opensips_fifo")
modparam("avpops", "db_url", "mysql://root:wellcloud@192.168.40.33:3306/opensips_lb")
modparam("avpops", "avp_table", "dbaliases")
modparam("dialog", "db_mode", 1)
modparam("dialog", "db_url", "mysql://root:wellcloud@192.168.40.33:3306/opensips_lb")
modparam("rr", "enable_double_rr", 1)
modparam("rr", "append_fromtag", 1)
modparam("tm", "fr_timer", 2)
modparam("dispatcher", "db_url", "mysql://root:wellcloud@192.168.40.33:3306/opensips_lb")
modparam("dispatcher", "ds_ping_method", "OPTIONS")
modparam("dispatcher", "ds_ping_interval", 5)
modparam("dispatcher", "ds_probing_threshhold", 2)
modparam("dispatcher", "ds_probing_mode", 1)
modparam("rtpproxy","rtpproxy_sock","udp:192.168.40.72:7890")
modparam("path", "use_received", 1)  
modparam("dialog","dlg_match_mode",1)
modparam("dialog","default_timeout",21600)
modparam("dialog","profiles_with_value","domain")
modparam("domain", "db_url","mysql://root:wellcloud@192.168.40.33:3306/opensips")
modparam("domain", "db_mode", 0)
modparam("auth_db|usrloc|uri", "use_domain", 1)
modparam("drouting", "use_domain", 1)
modparam("drouting", "db_url","mysql://root:wellcloud@192.168.40.33:3306/opensips_lb")

modparam("uac_registrant", "db_url","mysql://root:wellcloud@192.168.40.33:3306/core_2_4")
modparam("uac_registrant", "hash_size", 2)

modparam("uac_auth","credential","1002:192.168.2.4:1234")
modparam("uac_auth","auth_realm_avp","$avp(10)")
modparam("uac_auth","auth_username_avp","$avp(11)")
modparam("uac_auth","auth_password_avp","$avp(12)")

route{
	$var(local_ip)="192.168.40.72";
	$var(ext_ip)="192.168.40.72";
	$var(local_ip_port)="192.168.40.72:18627";
	$var(ext_ip_port)="192.168.40.72:18627";
	#$avp(10)="192.168.40.43";
	#$avp(11)="1002";
	#$avp(12)="1234";

	force_rport();


	if(is_method("OPTIONS")) {
		sl_send_reply("200", "ok");
		exit();
	}
	
	if(is_method("INVITE")){
		xlog("aim at 192.168.40.43");
		$du="sip:192.168.40.43:5060";
		record_route_preset("192.168.40.72:18627");
		t_on_failure("uac_auth");
		t_relay();
		exit;
	}

	#if (is_method("INVITE") && !is_from_local() && !ds_is_in_list("$si","$sp","1")){
	#	$avp(t_gwid)=is_from_gw("-1","n");
	#	if($avp(t_gwid)<=0){
	#		xlog("L_ERR","caller is not local and Not in white list!");
        #    send_reply("403","forbidden IP");
        #    exit;
	#	}
	#}

	if(nat_uac_test("19")){
		xlog("find a NAT address,fix it...si=$si sp=$sp rm=$rm");
		fix_nated_contact();
	}else{
		xlog("Not a NAT address..si=$si sp=$sp rm=$rm");
	}

	if(has_totag() && !is_method("NOTIFY")){
		if(loose_route()){
			xlog("enter in loose_route()..method=$rm");
			if(has_body("application/sdp")){
				if(ds_is_in_list("$si","$sp","1")){
					rtpproxy_offer("ro","$var(ext_ip)");
				}else{
					rtpproxy_offer("oc","$var(local_ip)");	
				}
				if(is_method("INVITE")){
					t_on_reply("rwSDP");
				}
			}	
			
			if ( $DLG_status!=NULL && !validate_dialog() ) {
				xlog("In-Dialog $rm from $si (callid=$ci) is not valid according to dialog\n");
				fix_route_dialog();
			}
			t_relay();
			exit;
		}else{
			if ( is_method("ACK") ) {
				if ( t_check_trans() ) {
					t_relay();
					exit;
				} else {
					exit;
				}
			}
			
			if ( is_method("BYE") ) {
				xlog(" receive BYE ");
				if ( t_check_trans() ) {
					xlog("receive bye request t_check_trans true");
					t_relay();
					exit;
				} else {
					xlog("receive bye request t_check_trans false");
					exit;
				}
			}
			sl_send_reply("404","Not here");
		}
        exit;

	}

	if(is_method("INVITE")){
			
	}

#===========================================================================================================================
	if(ds_is_in_list("$si","$sp","1")){
		xlog("enter in callout...");
		if (is_method("INVITE") && has_body("application/sdp")){
			xlog("exec rtpproxy_offer!");
			rtpproxy_offer("ro","$var(ext_ip)");
			record_route_preset("$var(ext_ip_port)");
			t_on_reply("rwSDP");
		}
		t_relay();
		exit;
	}else{
		record_route_preset("$var(local_ip_port)");
	}
	
	if (!mf_process_maxfwd_header("10")) {
		sl_send_reply("483","Too Many Hops");
		exit;
	}

	if ( is_method("CANCEL") ) {
		if ( t_check_trans() )
			t_relay();
		exit;
	}
	
	if (is_method("REGISTER")) { 
    	if (!add_path_received("edge-in")) 
      		sl_send_reply("503", "Internal Path Error");  
	} 

	if (is_method("INVITE")) {
		xlog("enter invite...");
		if(!create_dialog("B")){
			xlog("exec send_reply 500 Internal Server Error");
			send_reply("500","Internal Server Error");
			exit;
		}

		if (has_body("application/sdp")){
        		xlog("exec rtpproxy_offer!");
        		rtpproxy_offer("oc","$var(local_ip)");
			t_on_reply("rwSDP");
        	}
		
		setflag(10);
       		if (!ds_select_dst("1","0")) {
            		send_reply("502","Service Unavailable");
            		exit;
		}
	} else if (is_method("REGISTER")) {
		xlog("receive REGISTER.");
        if (!ds_select_dst("1", "0")) {
		xlog("L_ERROR","reply 503 Service Unavailable");
        	send_reply("503","Service Unavailable");
        	exit;
        }
	} else {
		record_route();
        send_reply("405","Method Not Allowed");
        exit;
    }
	# route the request
    if (!t_relay()) {
	xlog("L_ERROR","reply error!!");
        sl_reply_error();
    }
}

onreply_route[rwSDP]{
	fix_nated_contact();
    
	if(is_method("BYE|CANCEL")){
       	rtpproxy_unforce();
    }
    
	if(has_body("application/sdp")){
		xlog("onreply_route1  rtpproxy_answer----si=$si");

		if(ds_is_in_list("$si","$sp","1")){
			rtpproxy_answer("ro","$var(ext_ip)");
			replace_all("sip:192.168.40.72","sip:192.168.40.72");
		}else{	
			rtpproxy_answer("oc","$var(local_ip)");
			replace_all("sip:192.168.40.72","sip:192.168.40.72");
		}
    }
}
failure_route[uac_auth]{
	#if(uac_auth()){
		uac_auth();
		xlog("uac_auth is good!");
		t_relay("udp:192.168.40.43:5060");
		exit;
	#}else{
	#	xlog("failure to uac_auth!!!");	
	#}
}

